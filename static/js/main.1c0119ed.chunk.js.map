{"version":3,"sources":["components/Form/Form.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Form","props","className","initialValues","name","email","age","role","recommend","feature","improved","comments","validate","values","onSubmit","actions","formikProps","htmlFor","type","placeholder","id","component","disabled","selected","value","rows","cols","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c0119ed.chunk.js","sourcesContent":["import React from \"react\";\nimport {Field, Formik} from \"formik\";\nimport \"./Form.css\";\n\ninterface Props {\n}\n\nconst Form: React.FC<Props> = (props: Props) => {\n    return (\n        <div className=\"Card\">\n            <Formik\n                initialValues={{\n                    name: \"\",\n                    email: \"\",\n                    age: \"\",\n                    role: \"\",\n                    recommend: \"definitely\",\n                    feature: \"\",\n                    improved: \"\",\n                    comments: \"\",\n                }}\n                validate={values => {\n\n                }}\n                onSubmit={(values, actions) => {\n\n                }}>\n                {formikProps => {\n                    return (\n                        <form>\n                            <div className=\"Entry-field\">\n                                <label className=\"heading\" htmlFor=\"name\">Name</label>\n                                <Field\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"Enter your Name\"\n                                    id=\"name\"\n                                    className=\"Input-field\"\n                                />\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label className=\"heading\" htmlFor=\"email\">Email</label>\n                                <Field\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter your Email\"\n                                    id=\"email\"\n                                    className=\"Input-field\"\n                                />\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label className=\"heading\" htmlFor=\"age\">Age</label>\n                                <Field\n                                    type=\"number\"\n                                    name=\"age\"\n                                    placeholder=\"Enter your age\"\n                                    id=\"age\"\n                                    className=\"Input-field\"\n                                />\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label\n                                    className=\"heading\"\n                                    htmlFor=\"role\">\n                                    Which option best describes your current role?\n                                </label>\n                                <Field\n                                    component=\"select\"\n                                    name=\"role\"\n                                    id=\"role\"\n                                    className=\"Input-field Dropdown\">\n                                    <option\n                                        disabled\n                                        selected\n                                        value=\"\"\n                                        className=\"Dropdown-option\">\n                                        Select current Role\n                                    </option>\n                                    <option\n                                        value=\"Student\"\n                                        className=\"Dropdown-option color-black\">\n                                        Student\n                                    </option>\n                                    <option\n                                        value=\"Full Time Job\"\n                                        className=\"Dropdown-option color-black\">\n                                        Full Time Job\n                                    </option>\n                                    <option\n                                        value=\"Full Time Learner\"\n                                        className=\"Dropdown-option color-black\">\n                                        Full Time Learner\n                                    </option>\n                                    <option\n                                        value=\"Prefer not to say\"\n                                        className=\"Dropdown-option color-black\">\n                                        Prefer not to say\n                                    </option>\n                                    <option\n                                        value=\"Other\"\n                                        className=\"Dropdown-option color-black\">\n                                        Other\n                                    </option>\n                                </Field>\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label className=\"heading\">Would you recommend freeCodeCamp to a friend?</label>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"radio\" name=\"recommend\" id=\"definitely\" value=\"Definitely\"/>\n                                    <label className=\"radio-option\" htmlFor=\"definitely\">Definitely</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"radio\" name=\"recommend\" id=\"maybe\" value=\"Maybe\"/>\n                                    <label className=\"radio-option\" htmlFor=\"maybe\">Maybe</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"radio\" name=\"recommend\" id=\"not-sure\" value=\"Not Sure\"/>\n                                    <label className=\"radio-option\" htmlFor=\"not-sure\">Not Sure</label>\n                                </div>\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label\n                                    className=\"heading\"\n                                    htmlFor=\"feature\">\n                                    What is your favorite feature of freeCodeCamp?\n                                </label>\n                                <Field\n                                    component=\"select\"\n                                    name=\"feature\"\n                                    id=\"feature\"\n                                    className=\"Input-field Dropdown\">\n                                    <option\n                                        disabled\n                                        selected\n                                        value=\"\"\n                                        className=\"Dropdown-option\">\n                                        Select current Role\n                                    </option>\n                                    <option\n                                        value=\"Challenges\"\n                                        className=\"Dropdown-option color-black\">\n                                        Challenges\n                                    </option>\n                                    <option\n                                        value=\"Projects\"\n                                        className=\"Dropdown-option color-black\">\n                                        Projects\n                                    </option>\n                                    <option\n                                        value=\"Community\"\n                                        className=\"Dropdown-option color-black\">\n                                        Community\n                                    </option>\n                                    <option\n                                        value=\"Open Source\"\n                                        className=\"Dropdown-option color-black\">\n                                        Open Source\n                                    </option>\n                                </Field>\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label\n                                    className=\"heading\">\n                                    What would you like to see improved? (Check all that apply)\n                                </label>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"front-end\" value=\"Front-End Projects\"/>\n                                    <label className=\"radio-option\" htmlFor=\"front-end\">Front-End Projects</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"back-end\" value=\"Back-End Projects\"/>\n                                    <label className=\"radio-option\" htmlFor=\"back-end\">Back-End Projects</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"data\" value=\"Data Visualization\"/>\n                                    <label className=\"radio-option\" htmlFor=\"data\">Data Visualization</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"challenges\" value=\"Challenges\"/>\n                                    <label className=\"radio-option\" htmlFor=\"challenges\">Challenges</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"open\" value=\"Open Source Community\"/>\n                                    <label className=\"radio-option\" htmlFor=\"open\">Open Source Community</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"gitter\" value=\"Gitter help rooms\"/>\n                                    <label className=\"radio-option\" htmlFor=\"gitter\">Gitter help rooms</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"videos\" value=\"Videos\"/>\n                                    <label className=\"radio-option\" htmlFor=\"videos\">Videos</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"city\" value=\"City Meetups\"/>\n                                    <label className=\"radio-option\" htmlFor=\"city\">City Meetups</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"wiki\" value=\"Wiki\"/>\n                                    <label className=\"radio-option\" htmlFor=\"wiki\">Wiki</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"forum\" value=\"Forum\"/>\n                                    <label className=\"radio-option\" htmlFor=\"forum\">Forum</label>\n                                </div>\n\n                                <div className={\"Radio-container\"}>\n                                    <Field type=\"checkbox\" name=\"improved\" id=\"additional\" value=\"Additional Courses\"/>\n                                    <label className=\"radio-option\" htmlFor=\"additional\">Additional Courses</label>\n                                </div>\n                            </div>\n\n                            <div className=\"Entry-field\">\n                                <label className=\"heading\" htmlFor=\"comments\">Any comments or suggestions?</label>\n                                <Field\n                                    component=\"textarea\"\n                                    name=\"comments\"\n                                    rows={5}\n                                    cols={40}\n                                    placeholder=\"Enter your comments here...\"\n                                    id=\"comments\"\n                                    className=\"Input-field Textarea\"\n                                />\n                            </div>\n\n                        </form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from \"./components/Form/Form\";\n\nexport interface GlobalProps {\n}\n\nconst App: React.FC<GlobalProps> = (props: GlobalProps) => {\n    return (\n        <div className=\"App\">\n            <h1>\n                freeCodeCamp Survey Form\n            </h1>\n\n            <h3>Thank you for taking the time to help us improve the platform</h3>\n\n            <Form/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}